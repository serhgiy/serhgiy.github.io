{"version":3,"file":"static/webpack/static/development/pages/dashboard.js.c2884df4bfa060e42ad3.hot-update.js","sources":["webpack:///./pages/dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"../styles/style.scss\";\nimport { Collapse } from \"react-bootstrap\";\n\nconst Collapsible = ({ title, children }) => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <li\n        className=\"list-group-item\"\n        onClick={() => setOpen(!open)}\n        aria-expanded={open}\n      >\n        <span className=\"icon\">\n          <i className={open ? \"fas fa-minus-square\" : \"fas fa-plus-square\"} />\n        </span>\n        &nbsp;{title}\n      </li>\n      <Collapse in={open}>\n        <ul className=\"list-group\">{children}</ul>\n      </Collapse>\n    </>\n  );\n};\n\nfunction getNotificationClass() {\n  const NotificationClasses = [\n    \"alert alert-danger\",\n    \"alert alert-info\",\n    \"alert alert-warning\"\n  ];\n\n  // random item from array\n  return NotificationClasses[\n    Math.floor(Math.random() * NotificationClasses.length)\n  ];\n}\n<div class=\"alert alert-info\" role=\"alert\">\n  This is a info alertâ€”check it out!\n</div>;\n\nexport default () => {\n  const [activePage, setActivePage] = useState({\n    title: \"Dashboard\",\n    content: \"Hello, world!\"\n  });\n\n  const [notifications, setNotifications] = useState([]);\n\n  useEffect(() => {\n    setInterval(() => {\n      setAlerts([...notifications, getNotificationClass()]);\n    }, 1000);\n  }, []);\n\n  const MenuItem = ({ icon, title, content }) => (\n    <li\n      className=\"list-group-item\"\n      onClick={() => setActivePage({ title: title, content: content })}\n    >\n      {icon && (\n        <span className=\"icon\">\n          <i className={icon} />\n        </span>\n      )}\n      {title}\n    </li>\n  );\n\n  const StatisticsItems = [\n    { title: \"Tests\", content: \"Tests\" },\n    { title: \"Devices\", content: \"Devices\" },\n    { title: \"Builds\", content: \"Builds\" },\n    { title: \"Services\", content: \"Services\" },\n    { title: \"Projects\", content: \"Projects content\" }\n  ];\n\n  return (\n    <div className=\"dashboard\">\n      <header className=\"header\">\n        <div className=\"notifications\">{notifcations}</div>\n        <div className=\"controls\">\n          <p>Log In</p>\n          <p>Log Out...</p>\n        </div>\n      </header>\n      <aside className=\"sidebar\">\n        <ul className=\"list-group\">\n          <MenuItem title=\"Dashboard\" icon=\"fas fa-bars\" />\n          <Collapsible title=\"Statistics\">\n            {StatisticsItems.map(item => (\n              <MenuItem title={item.title} content={item.content} />\n            ))}\n          </Collapsible>\n          <Collapsible title=\"Reports\">\n            <MenuItem title=\"Tests\" />\n            <MenuItem title=\"Devices\" />\n            <MenuItem title=\"Builds\" />\n            <MenuItem title=\"Services\" />\n            <MenuItem title=\"Projects\" />\n          </Collapsible>\n          <MenuItem title=\"Configurations\" icon=\"fas fa-cog\" />\n          <Collapsible title=\"Overview\">\n            <MenuItem title=\"Tests\" />\n            <MenuItem title=\"Devices\" />\n            <MenuItem title=\"Builds\" />\n            <MenuItem title=\"Services\" />\n            <MenuItem title=\"Projects\" />\n          </Collapsible>\n        </ul>\n      </aside>\n      <section className=\"content\" id=\"content\">\n        <h1>{activePage.title}</h1>\n        {activePage.content}\n      </section>\n    </div>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAEA;AAGA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAMA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AACA;AAFA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAPA;AACA;AAasourceRoot":""}